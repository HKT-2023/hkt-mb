default_platform(:ios)
fastlane_require('dotenv')

platform :ios do
  before_all do
    Dotenv.overload '../../.env'
  end

  lane :certs do |options|
    match(app_identifier: "#{options[:bundle_id]}", type: 'appstore', readonly: true)
  end

  private_lane :build do |options|
    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: "-----BEGIN PRIVATE KEY-----\n#{ENV['KEY_APP_STORE_BASE64']}\n-----END PRIVATE KEY-----",
      in_house: false
    )
    if options[:version]
      increment_version_number(
        version_number: "#{options[:version]}",
        xcodeproj: "RealEstateMKP"
      )
      increment_build_number(
        build_number: options[:build_number] ? options[:build_number] : "1"
      )
    else
       increment_build_number(xcodeproj: "RealEstateMKP")
    end
    certs bundle_id:options[:bundle_id]
    build_ios_app(
      clean: true,
      silent: true,
      scheme: "RealEstateMKP",
      configuration: "#{options[:config].capitalize()}",
      export_method: "app-store",
      workspace: "RealEstateMKP.xcworkspace",
      export_options: {
        provisioningProfiles: {
          "#{options[:bundle_id]}" => "match AppStore #{options[:bundle_id]}"
        }
      }
    )
  end

  lane :distribute do |options|
    id = options[:bundle_id]
    case
    when id.include?("dev")
      config = "dev"
    when id.include?("stag")
      config = "stag"
    else
      config = "release"
    end
    build(bundle_id:id, config:config, version:options[:version], build_number:options[:build_number])
    upload_to_testflight(skip_waiting_for_build_processing: true)
    clean_build_artifacts
    clear_derived_data
  end
end
